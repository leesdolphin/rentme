# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-01 10:00
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import rentme.data.models._utils
import trademe.models.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('branding_background_color', models.TextField()),
                ('branding_large_banner_url', models.TextField()),
                ('branding_office_location', models.TextField()),
                ('branding_stroke_color', models.TextField()),
                ('branding_text_color', models.TextField()),
                ('branding_disable_banner', models.BooleanField(default=False)),
                ('fax_number', models.TextField(blank=True)),
                ('is_licensed_property_agency', models.BooleanField(default=False)),
                ('is_real_estate_agency', models.BooleanField(default=False)),
                ('logo', models.URLField(blank=True, null=True)),
                ('logo2', models.URLField(blank=True, null=True)),
                ('name', models.TextField(blank=True)),
                ('phone_number', models.TextField(blank=True)),
                ('website', models.URLField(blank=True, null=True)),
            ],
            options={
                'db_table': 'web_agency',
            },
        ),
        migrations.CreateModel(
            name='AgencyAgent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.TextField()),
                ('mobile_phone_number', models.TextField(blank=True)),
                ('office_phone_number', models.TextField(blank=True)),
                ('photo', models.URLField(blank=True)),
                ('url_slug', models.TextField(blank=True)),
                ('agency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agents', to='data.Agency')),
            ],
            options={
                'db_table': 'web_agencyagent',
            },
        ),
        migrations.CreateModel(
            name='Attributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('value', models.TextField()),
                ('display_name', models.TextField()),
            ],
            options={
                'db_table': 'web_attributes',
            },
        ),
        migrations.CreateModel(
            name='BroadbandTechnology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('completion', models.TextField()),
                ('availability', models.TextField()),
                ('min_down', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('max_down', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('min_up', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
                ('max_up', models.DecimalField(decimal_places=4, default=0, max_digits=14)),
            ],
            options={
                'db_table': 'web_broadbandtechnology',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('number', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('path', models.TextField()),
                ('is_restricted', models.BooleanField(default=False)),
                ('has_legal_notice', models.BooleanField(default=False)),
                ('has_classifieds', models.BooleanField(default=False)),
                ('area_of_business', rentme.data.models._utils.EnumIntegerField(enum=trademe.models.enums.AreaOfBusiness, null=True)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='data.Category')),
            ],
            options={
                'db_table': 'web_category',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('district_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'web_district',
            },
        ),
        migrations.CreateModel(
            name='GeographicLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accuracy', rentme.data.models._utils.EnumIntegerField(enum=trademe.models.enums.GeographicLocationAccuracy)),
                ('easting', models.IntegerField(default=-1)),
                ('northing', models.IntegerField(default=-1)),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
            ],
            options={
                'db_table': 'web_geographiclocation',
            },
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('listing_id', models.IntegerField(primary_key=True, serialize=False)),
                ('allows_pickups', rentme.data.models._utils.EnumIntegerField(enum=trademe.models.enums.AllowsPickups)),
                ('as_at', models.DateTimeField()),
                ('bidder_and_watchers', models.IntegerField(default=0)),
                ('body', models.TextField(blank=True)),
                ('can_add_to_cart', models.BooleanField()),
                ('end_date', models.DateTimeField()),
                ('has_gallery', models.BooleanField(default=False)),
                ('is_bold', models.BooleanField(default=False)),
                ('is_classified', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_highlighted', models.BooleanField(default=False)),
                ('is_super_featured', models.BooleanField(default=False)),
                ('note_date', models.DateTimeField()),
                ('price_display', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('super_feature_end_date', models.DateTimeField(null=True)),
                ('title', models.TextField()),
                ('view_count', models.IntegerField()),
                ('viewing_tracker_supported', models.BooleanField(default=False)),
                ('agency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='data.Agency')),
                ('attributes', models.ManyToManyField(related_name='listings', to='data.Attributes')),
                ('broadband_technologies', models.ManyToManyField(related_name='listings', to='data.BroadbandTechnology')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='data.Category')),
                ('geographic_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='data.GeographicLocation')),
            ],
            options={
                'db_table': 'web_listing',
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('locality_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'web_locality',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('unique_positive', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
                ('is_authenticated', models.BooleanField()),
                ('member_id', models.IntegerField(primary_key=True, serialize=False)),
                ('nickname', models.TextField()),
                ('unique_negative', models.IntegerField()),
                ('feedback_count', models.IntegerField()),
                ('region', models.TextField()),
                ('suburb', models.TextField()),
                ('is_address_verified', models.BooleanField()),
                ('date_address_verified', models.DateTimeField()),
                ('photo', models.URLField()),
                ('original_width', models.IntegerField(default=-1)),
                ('original_height', models.IntegerField(default=-1)),
                ('occupation', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'web_member',
            },
        ),
        migrations.CreateModel(
            name='MembershipDistrict',
            fields=[
                ('district_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'web_membershipdistrict',
            },
        ),
        migrations.CreateModel(
            name='MembershipLocality',
            fields=[
                ('locality_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'web_membershiplocality',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('photo_id', models.IntegerField(primary_key=True, serialize=False)),
                ('thumbnail', models.URLField()),
                ('list', models.URLField()),
                ('medium', models.URLField()),
                ('gallery', models.URLField()),
                ('large', models.URLField()),
                ('full_size', models.URLField()),
                ('plus_size', models.URLField()),
                ('original_width', models.IntegerField(default=-1)),
                ('original_height', models.IntegerField(default=-1)),
            ],
            options={
                'db_table': 'web_photo',
            },
        ),
        migrations.CreateModel(
            name='Suburb',
            fields=[
                ('suburb_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('adjacent_suburbs', models.ManyToManyField(related_name='_suburb_adjacent_suburbs_+', to='data.Suburb')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suburbs', to='data.District')),
            ],
            options={
                'db_table': 'web_suburb',
            },
        ),
        migrations.AddField(
            model_name='membershipdistrict',
            name='locality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='data.MembershipLocality'),
        ),
        migrations.AddField(
            model_name='listing',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='data.Member'),
        ),
        migrations.AddField(
            model_name='listing',
            name='photo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='data.Photo'),
        ),
        migrations.AddField(
            model_name='listing',
            name='photos',
            field=models.ManyToManyField(related_name='listings', to='data.Photo'),
        ),
        migrations.AddField(
            model_name='listing',
            name='suburb',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='data.Suburb'),
        ),
        migrations.AddField(
            model_name='district',
            name='locality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='data.Locality'),
        ),
    ]
